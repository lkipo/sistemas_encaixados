### MEMORIA PRÁCTICA 1 SISTEMAS ENCAIXADOS ###

1.

1.2 O programa é suma_simple.c

1.3 -> Non se pode obvservar en ningún lado 4+5, pois o ensamblador xa garda o valor como 9 no rexistro correspondente para aforrar pasos. O programa compilado en ensamblador é exercicio1.3.s

1.4 -> Como o programa non fai nada mais que sumar 4 e 5 (non saca nada por pantalla, non devolve nada etc), o ensamblador simplemente garda un 0 no rexistro 0 e nada mais. Isto ocorre por empregar unha optimización mais elevada.

1.5 -> O programa que suma c=a+b é suma.c

1.6 -> Si, pois primeiro garda 4 e 5 en memoria nas liñas 27-28 e 29-30, respectivamente, e despois carga, nas liñas 31 e 32, os valores de 4 e 5 gardados en memoria aos rexistros 2 e 3 respectivamente, para despois sumar os rexistros 2 e 3 e gardar o resultado desa operación no rexistro 3.

1.7 -> Ao compilalo cunha optimización mais agresiva podemos observar que en ningún sitio se realiza ningunha operación de suma nin se garda en ningún sitio 4 + 5, pois como non se vai a facer nada con ese valor, o compilador determina que non é útil e por tanto non realiza a operación en cuestión, simplemente garda un 0 no rexistro 0.

1.8 -> os programas compilado con gcc normal é exercicio1.8gcc.s, e o compilado para cortex a7 é execicio1.8a7.s. Si, obvservanse difrenzas. Todo é distinto no caso de gcc normal, pois iso está compilado para unha arquitectura x86, na que todo é distinto, os rexistros son diferentes, as instruccións son difrentes etc. Con todo, certas cousas son semellantes, como poden ser as instruccións movl e addl. Para o cortex a7, pese a ser un cpu distinto, ideado para un propósito difrente que os m0, aprecianse bastantes similitudes, pois as instruccións son prácticamente iguais, tendo pequenas difrencias en certos aspectos, como pode ser o guión (-) despois do # cando executas instrucicóns con memoria (str e ldr), sendo, por exemplo str r3, [fp, #-12] en vez de str r3, [rX, #12] sendo rX un rexistro calquera, pois nos cortex m0 non existe o fp, o cal supoño que será un rexistro especial como pode ser o contador de programa. O programa compilado para o cortex a7 é exercicio1.8a7.s

1.9 -> Os codigos son distintos, pois un está escrito na sintaxe de gnu (o código que eu compilei, que se chama exercicio1.9.s), e outro (o do libro), está escrito coa sintaxe de ARM. A maiores como están compilados con compiladores distintos, algunhas cousas son distintas, como os rexistros que empregan, mais a estructura básica é a mesma nos dous casos.
